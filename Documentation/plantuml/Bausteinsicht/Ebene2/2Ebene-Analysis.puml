@startuml

!include 2Ebene-Particles.puml
!include 2Ebene-miscellaneous.puml
hide ajb.particles.Atom
hide ajb.particles.Ion
hide ajb.particles.Molecule

namespace ajb{
    namespace analysis{
        abstract class Substance{
'           todo check for visibility maybe private possible
            #volume:double
            #temperature:double
            #pressure:double
            #physicalState:int
            ~Substance()
            +{abstract}alter(ExternalReagent reagent)
            +{abstract}react(Substance substance)
            #{abstract}alter()
            +getPhysicalState()
            +addTemperature(double temperature)
            +addPressure(double pressure)
            +addElement(Element element)
        }
        Substance --> .ajb.particles.Element

        class Assay{
            +evaluate(Element element):boolean
        }
        Assay --|> Substance
        Assay " *" --> " 1..*" Substance

        class Reagent
        Reagent -down-|> Substance

        class Analysis{
            - foundElements: ajb.particles.Element[]
            ~ Analysis(Assay primeSubstance)
            + getScore(): ajb.miscellaneous.Score
            + evaluate():boolean
            + markAsFound(ajb.particles.Element element):void
            + unmarkAsFound(ajb.particles.Element element):void
        }
        Analysis --> "- 1..* startElements" .ajb.particles.Element
        Analysis --> "- 1..* assays" Assay

        class AnalysisFactory implements .ajb.miscellaneous.FactorySingleton {
            +getReagentFromElements(ajb.particles.Element[] element): Reagent
            +generateRandomAnalysisContainingElements(ajb.particles.Element[] possibleElements):Analyse
            +getAssayWithSubstances(Substance[] substances)
        }
    }
}
@enduml