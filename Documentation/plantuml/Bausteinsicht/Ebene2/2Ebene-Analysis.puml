@startuml

namespace ajb{
    namespace particles{
        abstract class Element{
            -label: String
            +Element(String label)
            +getLabel():String
            +{abstract} experimentalProof(Substance assay):boolean
'            +{abstract} alter():void
        }

        class Molecule extends Element{
            +getIons():Ion[]
        }
        Molecule "*" --> "- 1..* ions" Ion

        class Ion extends Element{
            -charge:int
            +getCharge()
            +getAtoms(): Atoms[]
        }
        Ion "*" --> "- 1..* atoms" Atom

        class Atom extends Element{
            -elementSymbol: String
            -ordinal: int
            ~Atom(String label, String elementSymbol, int ordinal)
            +getElementSymbol():String
            +getOrdinal():int
        }
    }
    namespace analysis{

        abstract class Substance {
            -volume: double
            -aggregateState: double
            +getVolume():int
            +getAggregateState():int
            +add(Element element):boolean
        }
        Substance " *" --> "- 1..* elements" .ajb.particles.Element

        class Assay{
            +alter():boolean
        }
        Assay -down-|> Substance

        class Analysis{
            - foundElements: ajb.particles.Element[]
            + evaluate():boolean
            + markAsFound(ajb.particles.Element element):void
            + unmarkAsFound(ajb.particles.Element element):void
        }
        Analysis --> "- 1..* startElements" .ajb.particles.Element
        Analysis --> "- 1..* assays" Assay

        class Reagent{
        }
        Reagent -down-|> Substance
    }
}

@enduml